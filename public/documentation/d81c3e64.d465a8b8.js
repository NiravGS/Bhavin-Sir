(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{172:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/Data-quality-new-connection-85ca758468d206bae0263edc95ffa2f5.png"},90:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return i})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return u}));var r=n(2),o=n(6),a=(n(0),n(99)),c={id:"dq_newprocess",title:"DQ - Getting Started",sidebar_label:"Getting Started"},i={unversionedId:"dq_newprocess",id:"dq_newprocess",isDocsHomePage:!1,title:"DQ - Getting Started",description:"Get Started",source:"@site/docs/dq_newprocess.md",slug:"/dq_newprocess",permalink:"/documentation/docs/dq_newprocess",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/dq_newprocess.md",version:"current",sidebar_label:"Getting Started",sidebar:"someSidebar",previous:{title:"DQ - Introduction",permalink:"/documentation/docs/dq_intro"},next:{title:"DQ - New Process",permalink:"/documentation/docs/dq_newprocess_create"}},s=[{value:"Get Started",id:"get-started",children:[]},{value:"Log-in creation",id:"log-in-creation",children:[]},{value:"HOME",id:"home",children:[]},{value:"LAUNCH",id:"launch",children:[]},{value:"DATA QUALITY HOME",id:"data-quality-home",children:[]},{value:"CREATE CONNECTION",id:"create-connection",children:[]}],l={rightToc:s};function u(e){var t=e.components,c=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},l,c,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"get-started"},"Get Started"),Object(a.b)("p",null,"Before you begin visualizing dashboards, you must connect to your data and then step up data source connection.  Next step is to set up the process. Process is collection of tables / data set on which data checks can be performed, each process should be tagged with a unique name. Source name is a parent of process. A single source can be mapped to multiple process but a process can not span multiple sources. "),Object(a.b)("h2",{id:"log-in-creation"},"Log-in creation"),Object(a.b)("p",null,"Log-in / Create account using email id and password. Each log-in is consider owner of the process. Dashboard can be shared with other users but process don't span other accounts. "),Object(a.b)("h2",{id:"home"},"HOME"),Object(a.b)("p",null,"List different sections of Wavicle data platform. Under Data quality click Launch button to create the process. To know more about data quality bot click documentation section."),Object(a.b)("h2",{id:"launch"},"LAUNCH"),Object(a.b)("p",null,"Launch process allows the user to set up a new process or select the existing process to alter or view dash boards."),Object(a.b)("h2",{id:"data-quality-home"},"DATA QUALITY HOME"),Object(a.b)("h2",{id:"create-connection"},"CREATE CONNECTION"),Object(a.b)("p",null,"Set up connection to target source system:"),Object(a.b)("p",null,Object(a.b)("img",{alt:"create-process-initial",src:n(172).default})),Object(a.b)("p",null," ",Object(a.b)("strong",{parentName:"p"},"Host"),": URL for target system "),Object(a.b)("p",null," ",Object(a.b)("strong",{parentName:"p"},"User"),": Valid user name"),Object(a.b)("p",null," ",Object(a.b)("strong",{parentName:"p"},"Password"),": Valid password"),Object(a.b)("p",null," ",Object(a.b)("strong",{parentName:"p"},"Port"),": Valid port no based on data base type"),Object(a.b)("p",null," ",Object(a.b)("strong",{parentName:"p"},"Database"),": Database on which data quality to be performed "),Object(a.b)("p",null," ",Object(a.b)("strong",{parentName:"p"},"Additional settings"),": additional information used to establish connection. e.g. Data warehouse for Snowflake."),Object(a.b)("p",null," ",Object(a.b)("strong",{parentName:"p"},"Test"),": Used to test the connection. On Successful connection a message will be displayed on top right corner."),Object(a.b)("p",null," ",Object(a.b)("strong",{parentName:"p"},"Cancel"),": Return to home page."),Object(a.b)("p",null," ",Object(a.b)("strong",{parentName:"p"},"Save"),": On click, connection details will be saved to DQ bot source connection for establish connection to scheduled run."))}u.isMDXComponent=!0},99:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return m}));var r=n(0),o=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=o.a.createContext({}),u=function(e){var t=o.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=u(e.components);return o.a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},b=o.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),p=u(n),b=r,m=p["".concat(c,".").concat(b)]||p[b]||d[b]||a;return n?o.a.createElement(m,i(i({ref:t},l),{},{components:n})):o.a.createElement(m,i({ref:t},l))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,c=new Array(a);c[0]=b;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,c[1]=i;for(var l=2;l<a;l++)c[l]=n[l];return o.a.createElement.apply(null,c)}return o.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"}}]);