(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{164:function(e,t,a){"use strict";a.r(t),t.default=a.p+"assets/images/create-process-initial-579838d2b1111822e6c5de3d5f9e17c1.png"},165:function(e,t,a){"use strict";a.r(t),t.default=a.p+"assets/images/create-process-mid-56fdf1aeaff52787996b5a6a9bf8ca43.png"},166:function(e,t,a){"use strict";a.r(t),t.default=a.p+"assets/images/target-initial-25a512fb71eb9d1428aab2852162a83f.png"},167:function(e,t,a){"use strict";a.r(t),t.default=a.p+"assets/images/target-mid-6f3d3dc54d7650b99f44ace5933ca9c8.png"},168:function(e,t,a){"use strict";a.r(t),t.default=a.p+"assets/images/target-mid1-e6dbf428b23ecea07c346d706fcbe6b9.png"},169:function(e,t,a){"use strict";a.r(t),t.default=a.p+"assets/images/target-final-8d186ee1eec7a73acb42cd8fc3a539d8.png"},170:function(e,t,a){"use strict";a.r(t),t.default=a.p+"assets/images/create-process-schedule-7f4d5cf358bd837d271d4f8cf524720a.png"},171:function(e,t,a){"use strict";a.r(t),t.default=a.p+"assets/images/create-process-validate-1552fae1ee264ea4d21802160c3a3332.png"},88:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return s})),a.d(t,"metadata",(function(){return i})),a.d(t,"rightToc",(function(){return c})),a.d(t,"default",(function(){return p}));var n=a(2),r=a(6),o=(a(0),a(99)),s={id:"di_newprocess",title:"DI - Create New Process",sidebar_label:"Create New Process"},i={unversionedId:"di_newprocess",id:"di_newprocess",isDocsHomePage:!1,title:"DI - Create New Process",description:"Building an ELT/ETL or a data migration process has never been so easy. This cloud based, metadata driven approach makes the process very simple and with minimal information and with no coding your process would be live in a matter of minutes.",source:"@site/docs/di_newprocess.md",slug:"/di_newprocess",permalink:"/documentation/docs/di_newprocess",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/di_newprocess.md",version:"current",sidebar_label:"Create New Process",sidebar:"someSidebar",previous:{title:"DI - Overview",permalink:"/documentation/docs/di_overview"},next:{title:"DI - Manage Processes",permalink:"/documentation/docs/di_manageprocess"}},c=[{value:"Step 1 - Login",id:"step-1---login",children:[]},{value:"Step 2 - Source Information",id:"step-2---source-information",children:[]},{value:"Step 3 - Target Information",id:"step-3---target-information",children:[]},{value:"Step 4 - Schedule and Review",id:"step-4---schedule-and-review",children:[]}],l={rightToc:c};function p(e){var t=e.components,s=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(n.a)({},l,s,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"Building an ELT/ETL or a data migration process has never been so easy. This cloud based, metadata driven approach makes the process very simple and with minimal information and with no coding your process would be live in a matter of minutes."),Object(o.b)("h2",{id:"step-1---login"},"Step 1 - Login"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Login into the web app with your credentials."),Object(o.b)("li",{parentName:"ul"},"Open the Data Integration suite"),Object(o.b)("li",{parentName:"ul"},"Click on the Create New Process")),Object(o.b)("h2",{id:"step-2---source-information"},"Step 2 - Source Information"),Object(o.b)("p",null,"An input wizard opens up as shown below,"),Object(o.b)("p",null,Object(o.b)("img",{alt:"create-process-initial",src:a(164).default})),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Process Name")," - Provide name which will help you identify the functionality of the process. Process names cannot have spaces between them. Replace spaces with ",Object(o.b)("inlineCode",{parentName:"p"},"-")," or ",Object(o.b)("inlineCode",{parentName:"p"},"_"),"."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Description")," - A more detailed description of what your process is intended for. This field is optional, but it is a good practice to provide a description."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Cloud Type")," - Select your cloud environment. By default, it is AWS."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Cloud Bucket"),' - Provide the datalake bucket name here. Just the bucket name would suffice. Example: input "test-aws-datalake-bucket" instead of "s3://test-aws-datalake-bucket".'),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Source Type")," - Choose your source type. Is your your source system a Database or a Filesystem. In this example we will take database as source. Check here for filesystem as source."),Object(o.b)("p",null,"Note: On selection of the source type, you may notice that there are few input fields popping up. We will get to that in a bit."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Source System")," - Select your source system (connection) from the dropdown. These are systems that you or your team has already added. If you are building a process for a new source system, click the link ",Object(o.b)("inlineCode",{parentName:"p"},"Not able to find the source? Click here to add a new source"),"."),Object(o.b)("p",null,"You will now be able to input your connection details of the ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"di_addconnection#how-to-add-a-new-system-"}),"new system")," and upon completion, you will be redirected to the same page where you left."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Source Database")," - Once the source is is selected/added, select your source database."),Object(o.b)("p",null,"Your window should now look something as below,"),Object(o.b)("p",null,Object(o.b)("img",{alt:"create-process-mid",src:a(165).default})),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Source Tables")," - All the tables present inside the database chosen are displayed as a dropdown here. You will be able to select multiple tables by selecting from dropdown. You also have a option to select all the tables, just click the link ",Object(o.b)("inlineCode",{parentName:"p"},"select all"),"."),Object(o.b)("p",null,"Now that we have provided all the source information, it's time to move to target information. Simply click on ",Object(o.b)("inlineCode",{parentName:"p"},"Next")," to advance to target information page."),Object(o.b)("h2",{id:"step-3---target-information"},"Step 3 - Target Information"),Object(o.b)("p",null,"You should now be able to see the target information input wizard which should look like below,"),Object(o.b)("p",null,Object(o.b)("img",{alt:"target-initial",src:a(166).default})),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Target Type")," - Same as source information, select the target type from the drop down. It can either be Filesystem or Database. For this example, we will stick to Database as target."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Target System")," - Select your target system from the systems that are already added. Upon selection of target system, a few more input fields should pop up."),Object(o.b)("p",null,Object(o.b)("img",{alt:"target-mid",src:a(167).default})),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Target Database")," - Select the target database where the data needs to be loaded."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Raw Schema")," - Select the raw schema "),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Stage Schema")," - Select your stage schema"),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Target Schema")," - Select your final target schema where the transformed data will be loaded."),Object(o.b)("p",null,Object(o.b)("img",{alt:"target-mid1",src:a(168).default})),Object(o.b)("p",null,"Note: To know more about usage Raw Schema and Stage Schema, ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"di_processflow"}),"Click here"),"."),Object(o.b)("p",null,"On selection of the respective schema's you will see another set of input fields pop up as below,"),Object(o.b)("p",null,Object(o.b)("img",{alt:"target-final",src:a(169).default}),"    "),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Create Target Table")," - This check box is checked by default. For any new process created we assume that there is no corresponding target table present. If ",Object(o.b)("inlineCode",{parentName:"p"},"checked"),", The process would automatically create the tables in target with the same name as source table."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Source Table")," - These are the tables selected as part of the process in the source information section. This field cannot be edited here. I you wish to add or remove a table, you will have to go back using the ",Object(o.b)("inlineCode",{parentName:"p"},"Back")," button."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Target Table")," - This field is disabled by default. For any new process created we assume that there is no corresponding target table present. The process would automatically create the tables in target with the same name as source table. If the target tables are already present, ",Object(o.b)("inlineCode",{parentName:"p"},"uncheck")," the ",Object(o.b)("inlineCode",{parentName:"p"},"Create Target Table")," check box, so you will be able to map a source table to the already created target tables within the selected target schema."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Ingestion Type")," - This field allows you to specify the type of ingestion you would like to perform at the individual table level. The supported ingestion types are ",Object(o.b)("inlineCode",{parentName:"p"},"Full"),", ",Object(o.b)("inlineCode",{parentName:"p"},"Incremental")," and ",Object(o.b)("inlineCode",{parentName:"p"},"Master SCD"),". To know more about these ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"di_ingestiontypes"}),"ingestion types")," ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"di_ingestiontypes"}),"Click here"),"."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"CDC Columns")," - This field is disabled by default and it is enabled if the ingestion type is 'Incremental' or 'Master SCD'. This field captures the columns from the source table that are required to perform the change data capture between executions. ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"di_ingestiontypes#incremental"}),"Click here")," to know more on how CDC is performed."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"SCD Type")," - This field allows you to select the type of SCD you would like to perform. Currently we support, Type 1 and type 2 SCD."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"SCD Columns")," - Similar to CDC columns, we would capture the field required for performing the SCD. ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"di_ingestiontypes#incremental"}),"Click here")," to know more on how SCD is performed."),Object(o.b)("p",null,"Now that all the target information are provided, let's move the the next page."),Object(o.b)("h2",{id:"step-4---schedule-and-review"},"Step 4 - Schedule and Review"),Object(o.b)("p",null,"Now you are in the scheduler page. You can add as many schedule as you wish here for the process. The schedules can be one of the below,"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"One time"),Object(o.b)("li",{parentName:"ul"},"Daily"),Object(o.b)("li",{parentName:"ul"},"Weekly"),Object(o.b)("li",{parentName:"ul"},"Monthly")),Object(o.b)("p",null,"Choose the starting date, time of execution and the frequency as per the requirements and click on ",Object(o.b)("inlineCode",{parentName:"p"},"Add Schedule")," . You should see the schedule added in the right side as shown in below screenshot,"),Object(o.b)("p",null,Object(o.b)("img",{alt:"create-process-schedule",src:a(170).default})," "),Object(o.b)("p",null,"After adding the schedule, proceed to the review page. Here you will see all the information you provided for the process. "),Object(o.b)("p",null,Object(o.b)("img",{alt:"create-process-validate",src:a(171).default})," "),Object(o.b)("p",null,"Validate all the information such as the source and target tables, SCD type, schedule and once validated, click on the ",Object(o.b)("inlineCode",{parentName:"p"},"Create Process"),". Your pipeline is now live. The process will automatically trigger with the help of a CRON in the backend. You will also have the ability to ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"di_manageprocess#run-a-process-manually"}),"run the jobs manually")," from the UI."),Object(o.b)("p",null,"On successful creation of the process, you will get pop up message and will be redirected to the ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"di_manageprocess#view--process"}),"View Process")," page."))}p.isMDXComponent=!0},99:function(e,t,a){"use strict";a.d(t,"a",(function(){return b})),a.d(t,"b",(function(){return m}));var n=a(0),r=a.n(n);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function c(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=r.a.createContext({}),p=function(e){var t=r.a.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},b=function(e){var t=p(e.components);return r.a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),b=p(a),d=n,m=b["".concat(s,".").concat(d)]||b[d]||u[d]||o;return a?r.a.createElement(m,i(i({ref:t},l),{},{components:a})):r.a.createElement(m,i({ref:t},l))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,s=new Array(o);s[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:n,s[1]=i;for(var l=2;l<o;l++)s[l]=a[l];return r.a.createElement.apply(null,s)}return r.a.createElement.apply(null,a)}d.displayName="MDXCreateElement"}}]);